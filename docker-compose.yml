version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    networks:
      - filesapp-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    networks:
      - filesapp-network
    depends_on:
      - rabbitmq
      - postgres

  workers:
    build:
      context: ./workers
      dockerfile: Dockerfile
    networks:
      - filesapp-network
    depends_on:
      - rabbitmq
    volumes:
      - ./testfiles:/files

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - filesapp-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: filesapp
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - filesapp-network

  clamav:
    image: clamav/clamav:latest
    container_name: clamav
    ports:
      - "3310:3310"
    restart: always
    volumes:
      - ./testfiles:/files
    networks:
      - filesapp-network

networks:
  filesapp-network:
    driver: bridge

volumes:
  postgres-data:
